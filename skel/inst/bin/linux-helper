#!/bin/bash

## ssh-helper: Helper for the SSH cluster functions of the BatchJobs R
##   package.
##
## Requires the following Unix command line utilities:
##
##  * egrep, ps, pkill, pgrep, xargs, awk
##
## The following commands are implemented. Each command returns output
## which should be valid R code, which once evaluated creates a
## suitable R representation of the commands result.
##
## number-of-processors
##  Return the number of PEs on worker.
##
## worker-status FILEDIR
##   Return status of worker. The following list is defined
##     load: 3 real numbers, the load averave of the last 5,10,15 minutes
##     running_r_processes: number of R processes on this node of all users, 
##       no further restrictions
##     running_r_processes_50: number of R processes on this node of all users, 
##       that have more than 50 percent cpu usage when queried with 'ps -o pcpu'
##     running_batch_jobs: number of batch jobs, generated by BatchJobs for this 
##       this registry. The heuristic is: R processes for this user that have 
##       '-f $FILEDIR/jobs' in 'ps -o cmd'.  
##   number of running R jobs.
##
## start-job CWD RFILE OUTFILE
##   Start an R CMD BATCH process in $CWD running $RFILE and saving
##   the output in $OUTFILE.
##
## kill-job PID
##   Kill the R job with PID $PID.
##   First a TERM is sent, then 1 sec delay, then KILL. 
##
## list-jobs
##   Lists the pids of all jobs for this registry.
##
## All other commands will return a stop() condition to R.
##

RHOME="$1"; shift
CMD="$1"; shift
LC_ALL=C ## Avoid any localization issues.

case $CMD in
    number-of-cpus)
        cat /proc/cpuinfo | egrep '^processor' | wc -l
        ;;
    worker-status)
        read L1 L2 L3 REST < /proc/loadavg
        PROCS=$(pgrep R)
        # we get errors from ps if there is not a single R process running
        if [ -n "$PROCS" ]
        then
            NJOBS1=$(echo $PROCS | wc -l)
            NJOBS2=$(echo $PROCS | xargs ps -o pid,pcpu -p | awk '$2 > 50.0 { print $1 }' | wc -l)
            NJOBS3=$(echo $PROCS | xargs ps -o pid,cmd -p | grep  "$1/jobs" | wc -l)
        else
            NJOBS1=0
            NJOBS2=0
            NJOBS3=0
        fi
        printf "list(\n"
        printf "  load=c(%f, %f, %f),\n" $L1 $L2 $L3
        printf "  running_r_processes=%i,\n" $NJOBS1
        printf "  running_r_processes_50=%i,\n" $NJOBS2
        printf "  running_batch_jobs=%i\n" $NJOBS3
        printf ")\n"
        ;;
    start-job)
        cd "$1"
        "$RHOME/bin/R" CMD BATCH --no-save --no-restore "$2" "$3" \
            > /dev/null 2> /dev/null < /dev/null &
        printf '%i\n' $!
        ;;
    kill-job)
        pkill -TERM -P $1 > /dev/null 2> /dev/null
        sleep 1
        pkill -KILL -P $1 > /dev/null 2> /dev/null
        exit 0
        ;;
    list-jobs)
        printf "c("
        for pid in $(ps --no-header -o ppid -C R) ; do
            printf "%i, " $pid
        done
        printf "NULL)\n"
        ;;
    *)
        printf "stop(\"Unknown ssh-helper command '%s'.\")\n" $CMD
esac
